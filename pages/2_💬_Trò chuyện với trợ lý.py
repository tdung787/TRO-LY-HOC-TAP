import streamlit as st
import base64
from llama_index.llms.openai import OpenAI
import openai
from src.conversation_engine import (
    initialize_chatbot, chat_interface, load_chat_store, create_new_chat_file, save_chat_history,
)
from llama_index.core import Settings
import src.sidebar as sidebar

# C√†i ƒë·∫∑t m√¥ h√¨nh OpenAI v√† kh√≥a API
Settings.llm = OpenAI(model="gpt-4o", temperature=0.2)
openai.api_key = st.secrets.openai.OPENAI_API_KEY

hoc_bong = "data/images/hocbong.jpg"
xet_tuyen = "data/images/xettuyen.jpg"

link_hocbong = "https://tuyensinh.girc.edu.vn/"
link_xettuyen = "https://tuyensinh.tuaf.edu.vn/"

def get_base64_hocbong(hoc_bong):
    with open(hoc_bong, "rb") as img_file:
        return base64.b64encode(img_file.read()).decode()
    
def get_base64_xettuyen(xet_tuyen):
    with open(xet_tuyen, "rb") as img_file:
        return base64.b64encode(img_file.read()).decode()

hocbong_base64 = get_base64_hocbong(hoc_bong)
xettuyen_base64 = get_base64_xettuyen(xet_tuyen)

def main():
    if 'logged_in' not in st.session_state:
        st.session_state.logged_in = False
    if 'username' not in st.session_state:
        st.session_state.username = ""  # ƒê·∫£m b·∫£o c√≥ username khi ng∆∞·ªùi d√πng ƒëƒÉng nh·∫≠p

    username = st.session_state.username

    # Hi·ªÉn th·ªã sidebar v√† load t·ªáp tr√≤ chuy·ªán c·ªßa ng∆∞·ªùi d√πng
    sidebar.show_sidebar(username)

    # Kh·ªüi t·∫°o c√°c bi·∫øn tr·∫°ng th√°i cho l·∫ßn ƒë·∫ßu truy c·∫≠p
    if 'conversation_file' not in st.session_state:
        st.session_state.conversation_file = create_new_chat_file() 
    if 'selected_chat_file' not in st.session_state:
        st.session_state.selected_chat_file = False
    if 'has_chatted' not in st.session_state:
        st.session_state.has_chatted = False 

    # Ki·ªÉm tra n·∫øu ƒë√£ ch·ªçn t·ªáp chat t·ª´ sidebar
    if st.session_state.selected_chat_file:
        # N·∫øu c√≥, thay ƒë·ªïi t·ªáp tr√≤ chuy·ªán hi·ªán t·∫°i
        st.session_state.conversation_file = st.session_state.selected_chat_file
        chat_store = load_chat_store(st.session_state.selected_chat_file)
        st.session_state.has_chatted = True
    else:
        # N·∫øu ch∆∞a ch·ªçn t·ªáp n√†o, s·ª≠ d·ª•ng t·ªáp m·ªõi
        chat_store = load_chat_store(st.session_state.conversation_file)

    if st.session_state.logged_in:
        user_info = st.session_state.user_info
        st.header("üí¨ AI tr·ª£ l√Ω h·ªçc t·∫≠p v√† gi·∫£ng d·∫°y m√¥n To√°n")

        # T·∫°o ho·∫∑c t·∫£i chat_store
        col1, col2, col3 = st.columns([1.5, 2, 1.5])
        with col1:
            st.markdown(
                f'<a href="{link_hocbong}" target="_blank">'
                f'<img src="data:image/png;base64,{hocbong_base64}" width="300">'
                '</a>',
                unsafe_allow_html=True
            )

            with col2:
                container = st.container()
                # Kh·ªüi t·∫°o chatbot v√† b·∫Øt ƒë·∫ßu giao di·ªán tr√≤ chuy·ªán
                agent = initialize_chatbot(chat_store, container, username, user_info)
                
                # C·∫≠p nh·∫≠t tr·∫°ng th√°i n·∫øu c√≥ chat
                if chat_interface(agent, chat_store, container, st.session_state.conversation_file):
                    st.session_state.has_chatted = True  # ƒê√°nh d·∫•u ƒë√£ c√≥ chat
                    save_chat_history(chat_store, st.session_state.conversation_file, st.session_state.username)

                # Ch·ªâ hi·ªÉn th·ªã n√∫t "K·∫øt th√∫c cu·ªôc tr√≤ chuy·ªán" khi ƒë√£ c√≥ √≠t nh·∫•t m·ªôt tin nh·∫Øn
                if st.session_state.has_chatted:
                    if st.button("T·∫°o cu·ªôc tr√≤ chuy·ªán m·ªõi"):
                        save_chat_history(chat_store, st.session_state.conversation_file, username)
                        st.session_state.conversation_file = create_new_chat_file()
                        st.session_state.selected_chat_file = False
                        st.session_state.has_chatted = False
                        st.rerun()
            with col3:
                st.markdown(
                    f'<a href="{link_xettuyen}" target="_blank">'
                    f'<img src="data:image/png;base64,{xettuyen_base64}" width="300">'
                    '</a>',
                    unsafe_allow_html=True
                )
                
    else:
        st.markdown('### ƒêƒÉng nh·∫≠p ƒë·ªÉ s·ª≠ d·ª•ng t√≠nh nƒÉng n√†y')

if __name__ == "__main__":
    main()
